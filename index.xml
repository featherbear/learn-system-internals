<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Learn System Internals</title><link>/</link><description>Recent content on Learn System Internals</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Tue, 01 Sep 2020 13:13:33 +1000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Memory</title><link>/cpu-fundamentals/memory/</link><pubDate>Tue, 01 Sep 2020 13:13:33 +1000</pubDate><guid>/cpu-fundamentals/memory/</guid><description>Memory Everything is Memory When we save a file, it is saved to the computer memory.
When we perform an arithmetic operation, its operands and outputs are stored in the memory
When we press a key, a flag in the memory is changed.
When we launch a program, that program is loaded into memory!
Representation of Data As digital circuits (i.e. computers) only deal with binary data (1s and 0s) - there exists different encoding schemas to represent different data types.</description></item><item><title>The CPU</title><link>/cpu-fundamentals/overview/</link><pubDate>Tue, 01 Sep 2020 13:12:54 +1000</pubDate><guid>/cpu-fundamentals/overview/</guid><description>What&amp;rsquo;s in a CPU? Inside a CPU is a group of different microchips that collectively work together to serve the functionality of a CPU.
I/O To interact with other devices on the system, the CPU contains input and output lanes which are physically connected (via &amp;lsquo;busses&amp;rsquo; on the circuit board) to those devices.
I/O can include keyboards, mice, monitors, speakers.
Registers Registers are data storages that lie in the CPU.</description></item><item><title>Course Outline</title><link>/course-outline/</link><pubDate>Tue, 01 Sep 2020 12:38:30 +1000</pubDate><guid>/course-outline/</guid><description> System Internals Overview This course delves into the underlying low-level hardware components and software algorithms that form the base primitive components used in modern computing
Course goals To understand the layout of the computer memory, and the representation of data To understand the relationships and interactions between computer hardware, the operating system, and user code To learn fundamental structures and algorithms for storing and interacting with data Topics CPU Fundamentals Architectural layout of a CPU Representation of memory Memory allocation Program execution The Operating System Access Management Time Management Memory Management Resource Management Multiprocessors</description></item></channel></rss>