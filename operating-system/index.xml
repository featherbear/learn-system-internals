<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operating-systems on Learn System Internals</title><link>/operating-system/</link><description>Recent content in Operating-systems on Learn System Internals</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Tue, 01 Sep 2020 13:14:09 +1000</lastBuildDate><atom:link href="/operating-system/index.xml" rel="self" type="application/rss+xml"/><item><title>Processes and Threads</title><link>/operating-system/processes-and-threads/</link><pubDate>Tue, 01 Sep 2020 13:14:09 +1000</pubDate><guid>/operating-system/processes-and-threads/</guid><description>Processes and Threads Processes and Threads A process (aka task / job) is an instance of a program A thread is a unit of execution of a process PID 8498 is the main process
PIDs 8499 and 8500 are the threads Process Control Block (PCB) The Process Control Block is a data structure which holds the information related to a process.
PID Registers Program Counter Stack Pointer Process State File Descriptors etc&amp;hellip; The kernel keeps track of all PCBs in a process table</description></item><item><title>The Operating System</title><link>/operating-system/overview/</link><pubDate>Tue, 01 Sep 2020 13:14:08 +1000</pubDate><guid>/operating-system/overview/</guid><description>Operating Systems The Role of the Operating System An Operating System can be seen in two ways
As a layer of abstraction (&amp;ldquo;Abstract Machine&amp;rdquo;) As a resource manager Abstract Machine The operating system extends the basic hardware set, adding new functionality that is usable by programs.
The OS hides the specifics and details of the hardware, and instead provides a unified interface to the system.
Resource Manager The operating system fairly allocates resources (memory, execution time, etc) to users and processes.</description></item></channel></rss>